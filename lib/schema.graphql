schema {
  query: Query
  mutation: Mutation
}

enum ImageStatus {
  Approved
  Pending
  Rejected
}

type Query {
  getUser(userId: String!): User
  getImage(imageId: String!): Image
  getRandomImage: Image
  getOwnedImageForUser(userId: String! ownedImageId: String!): OwnedImage
  getOwnedImageForImage(imageId: String! ownedImageId: String!): OwnedImage
}

type Mutation {
  createUser(input: CreateUserInput): User
  createImage(input: CreateImageInput): Image
  createOwnedImage(input: CreateOwnedImageInput): Boolean
}

type User {
  id: ID!
  name: String!
  email: String!
  remainGiftbox: Int!
  createdAt: AWSDateTime!
  ownedImage(num: Int, after: String): OwnedImageConnection!
}

type Image {
  id: ID!
  source_url: String!
  thumbnail_url: String!
  title: String!
  createdAt: AWSDateTime!

  status: ImageStatus!
  createdBy: ID!
  ownedImage(num: Int, after: String): OwnedImageConnection!
}

type OwnedImageConnection {
  cursor: String
  ownedImage: [OwnedImage]
}

type OwnedImage {
  id: ID!
  source_url: String!
  thumbnail_url: String!
  title: String!
  createdAt: AWSDateTime!
}

input CreateUserInput {
  name: String!
  email: String!
  remainGiftbox: Int!
  createdAt: AWSDateTime!
}

input CreateImageInput {
  source_url: String!
  thumbnail_url: String!
  title: String!
  status: ImageStatus!
  createdBy: ID!
  createdAt: AWSDateTime!
}

input CreateOwnedImageInput {
  userId: String!
  imageId: String!
  source_url: String!
  thumbnail_url: String!
  title: String!
  createdAt: AWSDateTime!
}
